@page "/"
@inject HttpClient http

<h1>Wanna play a game?</h1>

<div>
    <label for="@Number">Enter your number:</label>
    <input id="myInput" bind="@Number" placeholder="Good Luck!"/>
</div>

<div>
    <button onclick="@(async () => await CheckNumber())" hidden="@gameOver">Check</button>
    @if (!string.IsNullOrWhiteSpace(Message)) {
        @Message
    }
</div>

<div>
    @if (gameOver) {
        <button onclick="@(async () => await ShowLogs())">Show Log</button>
        @if (!string.IsNullOrWhiteSpace(Logs)) {
             @foreach (string line in Logs.Split('\n')) {
                  @line
                  <br/>
              }
         }
        <button onclick="location.reload()">Play Again</button>
    }
</div>

@functions {
    string Number { get; set; }
    string Message { get; set; }
    string Logs { get; set; }
    bool gameOver { get; set; }

    async Task CheckNumber() {
        var response = await http.GetAsync($"/api/game/checknumber/?number={Number}").ConfigureAwait(false);
        if (response.IsSuccessStatusCode) gameOver = true;
        Message = await response.Content.ReadAsStringAsync();
        StateHasChanged();
    }

    async Task ShowLogs() {
        var response = await http.GetAsync($"/api/game/showlogs").ConfigureAwait(false);
        Logs = await response.Content.ReadAsStringAsync();
        StateHasChanged();
    }

}